Recording rules allow prometheus to periodically evaluate PromQL expression
and store the resulting times series generated by them.

it speeding up your dashboards and provide aggregated results for use elsewhere.

On a prometheus server, we can provide a specific epression which will run continuosly.
it will store the result in the databases.
when we using a grafana or other dashboarding tool, it going speed up the result beacuase the resulat already stored in the databases.

1. build a rules.yaml
2. add it to your prometheus.yaml under "rule_Files" section
3. systemctl restart service


Metric-Name-Scheme:
        level     :      metric_name     :         opertations
         path      :      http_requests     :        rate5m

groups:
- name: my-recording-rules
  rules:
   # The new output metric name.
  - record: path:http_requests:rate5m
   # The Expression
    expr: sum without(instance) (rate(http_requests_total{job="my-job"}[5m]))
  - record: instance_mode:node_cpu:rate1m # The new output metric name.
    expr: sum without(cpu) (rate(node_cpu_seconds_total{job="node"}[1m]))
    labels:
      my_label: my_value
  - record: instance_path:requests:rate5m
    expr: rate(requests_total{job="myjob"}[5m])
  - record: path:requests:rate5m
    expr: sum without (instance)(instance_path:requests:rate5m{job="myjob"})

  - record: instance_path:request_failures:rate

# Calculating average latency over a time period from a Summary:

- record: instance_path:request_latency_seconds_count:rate5m
  expr: rate(request_latency_seconds_count{job="myjob"}[5m])

- record: instance_path:request_latency_seconds_sum:rate5m
  expr: rate(request_latency_seconds_sum{job="myjob"}[5m])

- record: instance_path:request_latency_seconds:mean5m
  expr: |2
      instance_path:request_latency_seconds_sum:rate5m{job="myjob"}
    /
      instance_path:request_latency_seconds_count:rate5m{job="myjob"}

# Aggregate up numerator and denominator, then divide.
- record: path:request_latency_seconds:mean5m
  expr: |2
      sum without (instance)(instance_path:request_latency_seconds_sum:rate5m{job="myjob"})
    /
      sum without (instance)(instance_path:request_latency_seconds_count:rate5m{job="myjob"}